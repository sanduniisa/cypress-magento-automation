{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-06-19T12:27:00.177Z",
    "end": "2025-06-19T12:27:10.392Z",
    "duration": 10215,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "486a14e7-3742-4300-8b20-b9830a811ffe",
      "title": "",
      "fullFile": "cypress/integration/tests/02_placeOrder.spec.js",
      "file": "cypress/integration/tests/02_placeOrder.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f42cdcbc-8a00-4cb2-90da-d966d836babb",
          "title": "Test Case (B): Place order with multiple products and validate total price",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add multiple products and validate cart total",
              "fullTitle": "Test Case (B): Place order with multiple products and validate total price should add multiple products and validate cart total",
              "timedOut": null,
              "duration": 10186,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const prices = [];\n// Navigate to product category page once at the start\n_HomePage.default.navigateToWomenTopsJackets();\n// Wrap the products array to chain Cypress commands properly\ncy.wrap(this.data.products).each(product => {\n  // Before each product add, visit the Jackets page to reset context\n  cy.visit('https://magento.softwaretestingboard.com/women/tops-women/jackets-women.html');\n  // Return the chain to ensure proper synchronization\n  return _ProductPage.default.addProductToCartAndReturnPrice(product.name, product.size, product.colorIndex).then(price => {\n    prices.push(price);\n  });\n}).then(() => {\n  // Sum prices safely\n  const expectedTotal = prices.reduce((sum, price) => {\n    return sum + (typeof price === 'number' ? price : 0);\n  }, 0);\n  // Open cart dropdown\n  cy.get('.showcart', {\n    timeout: 10000\n  }).click();\n  // Wait for mini cart popup\n  cy.get('div.mage-dropdown-dialog', {\n    timeout: 10000\n  }).should('be.visible');\n  // Validate mini cart subtotal\n  cy.get('.price-wrapper[data-bind*=\"subtotal_excl_tax\"] .price').invoke('text').then(subtotalText => {\n    const subtotal = parseFloat(subtotalText.replace('$', '')).toFixed(2);\n    const expected = expectedTotal.toFixed(2);\n    expect(subtotal).to.equal(expected);\n    cy.log(`Subtotal in mini cart: $${subtotal}`);\n  });\n});",
              "err": {
                "message": "TypeError: The following error originated from your application code, not from Cypress.\n\n  > Cannot read properties of undefined (reading 'clone')\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "estack": "TypeError: The following error originated from your application code, not from Cypress.\n\n  > Cannot read properties of undefined (reading 'clone')\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n    at addBlockLoader (https://magento.softwaretestingboard.com/pub/static/version1695896754/frontend/Magento/luma/en_US/Magento_Ui/js/block-loader.js:55:36)\n    at update (https://magento.softwaretestingboard.com/pub/static/version1695896754/frontend/Magento/luma/en_US/Magento_Ui/js/block-loader.js:84:21)\n    at ko.dependentObservable.disposeWhenNodeIsRemoved (https://magento.softwaretestingboard.com/pub/static/version1695896754/frontend/Magento/luma/en_US/knockoutjs/knockout.js:3373:33)\n    at Function.evaluateImmediate_CallReadThenEndDependencyDetection (https://magento.softwaretestingboard.com/pub/static/version1695896754/frontend/Magento/luma/en_US/knockoutjs/knockout.js:2173:103)\n    at Function.evaluateImmediate_CallReadWithDependencyDetection (https://magento.softwaretestingboard.com/pub/static/version1695896754/frontend/Magento/luma/en_US/knockoutjs/knockout.js:2140:29)\n    at Function.evaluateImmediate (https://magento.softwaretestingboard.com/pub/static/version1695896754/frontend/Magento/luma/en_US/knockoutjs/knockout.js:2101:28)\n    at Function.evaluatePossiblyAsync (https://magento.softwaretestingboard.com/pub/static/version1695896754/frontend/Magento/luma/en_US/knockoutjs/knockout.js:2066:32)\n    at Function.notifySubscribers (https://magento.softwaretestingboard.com/pub/static/version1695896754/frontend/Magento/luma/en_US/knockoutjs/knockout.js:1320:38)\n    at Function.valueHasMutated (https://magento.softwaretestingboard.com/pub/static/version1695896754/frontend/Magento/luma/en_US/knockoutjs/knockout.js:1538:61)\n    at UiClass.observable [as isLoading] (https://magento.softwaretestingboard.com/pub/static/version1695896754/frontend/Magento/luma/en_US/knockoutjs/knockout.js:1504:28)",
                "diff": null
              },
              "uuid": "53530202-06d4-43ec-86d8-81b7a19a8405",
              "parentUUID": "f42cdcbc-8a00-4cb2-90da-d966d836babb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "53530202-06d4-43ec-86d8-81b7a19a8405"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10186,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}